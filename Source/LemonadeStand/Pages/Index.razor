@page "/"
@using System.Threading
@using System.Globalization
@implements IDisposable

<h1>Välkommen till <br /> L<span class="product-logo-center">EMO</span>S P<img src="/img/brand/logo/logo-40.png" style="transform:translateY(-5px)" />S</h1>

Tryck på <a href="recipes">Recepthantering </a>knappen för att kontrollera dina recept.
Tryck på <a href="kundorder">Kundorder </a>knappen och tjäna pengar på dina utsökta juicer och mixar.

<div class="rigt-side-clock-container"><h4 style="display:inline-flex; left:0; float:left;">VECKA: @currentWeek </h4><h4 style="display:inline-flex;">@currentDate @currentTime</h4></div>

@code {
    private string currentDate;
    private string currentTime;
    private string currentWeek;
    Timer clockTimer;

    protected override void OnInitialized()
    {
        clockTimer = new Timer(Tick, null, 0, 1000);
    }

    public string GetCurrentWeek()
    {
        DateTime time = DateTime.Now;

        DayOfWeek day = CultureInfo.InvariantCulture.Calendar.GetDayOfWeek(time);

        if (day >= DayOfWeek.Monday && day <= DayOfWeek.Wednesday)
        {
            time = time.AddDays(3);
        }

        return CultureInfo.InvariantCulture.Calendar.GetWeekOfYear(time, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Monday).ToString();
    }

    private void Tick(object _)
    {
        currentWeek = GetCurrentWeek();
        currentDate = DateTime.Now.ToString("yyyy-MM-dd");
        currentTime = DateTime.Now.ToString("HH:mm:ss");
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        clockTimer?.Dispose();
    }
}