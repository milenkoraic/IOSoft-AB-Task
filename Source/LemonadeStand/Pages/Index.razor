@page "/"
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@inject IJSRuntime JSRuntime;

<h2>Lemonade Stand Code Test</h2>
<hr />

<h3>Tillgängliga recept</h3>

<div class="container mx-auto mt-4">
    <div class="row">
        <div class="col-md-4">
            <div class="card" style="width: 18rem;">
                <img src="/img/recipes/Apple-Juice.jpg" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">Äppel-juice</h5>
                    <hr />
                    <h6 class="card-subtitle mb-2">Pris per glas:</h6>
                    <p>10 SEK</p>
                    <h6 class="card-text">Frukt som behövs per glas:</h6>
                    <p>2.5 Apple (s)</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card" style="width: 18rem;">
                <img src="/img/recipes/Melon-Juice.jpg" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">Melon-juice</h5>
                    <hr />
                    <h6 class="card-subtitle mb-2">Pris per glas:</h6>
                    <p>12 SEK</p>
                    <h6 class="card-text">Frukt som behövs per glas:</h6>
                    <p>0.5 Melon (s)</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card" style="width: 18rem;">
                <img src="/img/recipes/Orange-Juice.jpg" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">Apelsin-juice</h5>
                    <hr />
                    <h6 class="card-subtitle mb-2">Pris per glas:</h6>
                    <p>9 SEK</p>
                    <h6 class="card-text">Frukt som behövs per glas:</h6>
                    <p>1 Orange (s)</p>
                </div>
            </div>
        </div>
    </div>
</div>

<h3>Kundorder</h3>

<section class="form-container" style="background:white;color:black;padding:10px;margin-bottom:30px;">
    <div class="form-validation">
        This container will be used to log required validation logic and notifications on processing.
    </div>
    <EditForm EditContext="@editContext" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset">
        <DataAnnotationsValidator />
        <div class="form-group col">
            <label>Select recipe:</label>
            <InputSelect @bind-Value="model.RecipeName" class="form-control">
                <option value="" selected></option>
                <option value="Apple Lemonade">Äppel-juice</option>
                <option value="Melon Lemonade">Melon-juice</option>
                <option value="Orange Lemonade">Apelsin-juice</option>
            </InputSelect>
            <ValidationMessage For="@(() => model.RecipeName)" />
        </div>
        <div class="form-group col">
            <label>Order quantity:</label>
            <InputNumber @bind-Value="model.OrderQuantity" Min="0" class="form-control" />
            <ValidationMessage For="@(() => model.OrderQuantity)" />
        </div>
        <div class="form-group col">
            <label>Money paid</label>
            <InputNumber @bind-Value="model.MoneyPaid" Min="0" class="form-control" />
            <ValidationMessage For="@(() => model.MoneyPaid)" />
        </div>
        <div class="form-group col">
            <label>Apples added:</label>
            <InputNumber @bind-Value="model.ApplesAdded" Min="0" class="form-control" />
            <ValidationMessage For="@(() => model.ApplesAdded)" />
        </div>
        <div class="form-group col">
            <label>Melons added:</label>
            <InputNumber @bind-Value="model.MelonsAdded" Min="0" class="form-control" />
            <ValidationMessage For="@(() => model.MelonsAdded)" />
        </div>
        <div class="form-group col">
            <label>Oranges added:</label>
            <InputNumber @bind-Value="model.OrangesAdded" Min="0" class="form-control" />
            <ValidationMessage For="@(() => model.OrangesAdded)" />
        </div>
        <div class="text-left">
            <button type="submit" class="btn btn-success mr-1">PROCESS ORDER</button>
        </div>
    </EditForm>
</section>

@code {
    private OrderModel model = new OrderModel();
    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(model);
    }

    private void HandleValidSubmit()
    {
        var modelJson = JsonSerializer.Serialize(model, new JsonSerializerOptions { WriteIndented = true });
        JSRuntime.InvokeVoidAsync("alert", $"SUCCESS!! :-)\n\n{modelJson}");
    }

    private void HandleReset()
    {
        model = new OrderModel();
        editContext = new EditContext(model);
    }

    private interface IFruit
    {
        public string Name { get; }
    }

    private class Fruit:IFruit
    {
        public string Name { get; }
    }

    private interface IRecipe
    {
        string Name { get; }
        Type AllowedFruit { get; }
        decimal ConsumptionPerGlass { get; }
        int PricePerGlass { get; }
    }

    private interface IFruitPressService
    {
       
    }


    private class OrderModel
    {
        [Required(AllowEmptyStrings = false, ErrorMessage = "You must select some recipe!")]
        [Display(Name = "Recipe Name ")]
        public string RecipeName { get; set; }

        [Required]
        [Display(Name = "Order Quantity")]
        public int OrderQuantity { get; set; }

        [Required]
        [Display(Name = "Money Paid")]
        public int MoneyPaid { get; set; }

        [Required]
        [Display(Name = "Apples Added")]
        public int ApplesAdded { get; set; }

        [Required]
        [Display(Name = "Melons Added")]
        public int MelonsAdded { get; set; }

        [Required]
        [Display(Name = "Oranges Added")]
        public int OrangesAdded { get; set; }

    }
}
